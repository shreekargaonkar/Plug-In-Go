{"ast":null,"code":"var _jsxFileName = \"D:\\\\MP1\\\\indelible hasty elephant-react (1)\\\\src\\\\components\\\\listchargers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places']; // Required for address lookup\n\nconst ListChargers = () => {\n  _s();\n  const [chargers, setChargers] = useState([]);\n  const [selectedCharger, setSelectedCharger] = useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyCWgR18p7RsKbfVhNuYB7B2FJYWIG-2xRE',\n    libraries\n  });\n  const mapContainerStyle = {\n    width: '100vw',\n    height: '400px'\n  };\n  const center = {\n    lat: 15.854147919657759,\n    // Default lat (adjust based on your region)\n    lng: 74.50809245137964\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/chargers/getallchargers');\n        setChargers(response.data);\n      } catch (error) {\n        console.error('Error fetching chargers data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleChargerClick = charger => {\n    setSelectedCharger(charger);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedCharger(null);\n  };\n  const renderMap = () => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 10,\n    center: center,\n    children: [chargers.map(charger => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: charger.latitude,\n        lng: charger.longitude\n      }\n    }, charger.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), selectedCharger && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedCharger.latitude,\n        lng: selectedCharger.longitude\n      },\n      onCloseClick: handleInfoWindowClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedCharger.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://www.google.com/maps/search/?api=1&query=${selectedCharger.latitude},${selectedCharger.longitude}`,\n            target: \"_blank\",\n            rel: \"noreferrer noopener\",\n            children: \"Get Directions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  if (loadError) return 'Error loading Google Maps';\n  if (!isLoaded) return 'Loading Google Maps';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of All Chargers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-header\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rate/min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Compatibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Show on Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: chargers.map(charger => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: charger.longitude\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: charger.latitude\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: charger.rate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: charger.compatibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleChargerClick(charger),\n              children: \"Show on Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, charger.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isLoaded && renderMap()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ListChargers, \"UsWK4F39XhAftHFPUrcpCri1kiY=\", false, function () {\n  return [useLoadScript];\n});\n_c = ListChargers;\nexport default ListChargers;\nvar _c;\n$RefreshReg$(_c, \"ListChargers\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","useLoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","libraries","ListChargers","_s","chargers","setChargers","selectedCharger","setSelectedCharger","isLoaded","loadError","googleMapsApiKey","mapContainerStyle","width","height","center","lat","lng","fetchData","response","get","data","error","console","handleChargerClick","charger","handleInfoWindowClose","renderMap","zoom","children","map","position","latitude","longitude","id","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","name","href","target","rel","className","rate","compatibility","onClick","_c","$RefreshReg$"],"sources":["D:/MP1/indelible hasty elephant-react (1)/src/components/listchargers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\n\r\nconst libraries = ['places']; // Required for address lookup\r\n\r\nconst ListChargers = () => {\r\n  const [chargers, setChargers] = useState([]);\r\n  const [selectedCharger, setSelectedCharger] = useState(null);\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: 'AIzaSyCWgR18p7RsKbfVhNuYB7B2FJYWIG-2xRE', \r\n    libraries,\r\n  });\r\n\r\n  const mapContainerStyle = {\r\n    width: '100vw',\r\n    height: '400px', \r\n  };\r\n\r\n  const center = {\r\n    lat: 15.854147919657759, // Default lat (adjust based on your region)\r\n    lng: 74.50809245137964, \r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api/chargers/getallchargers');\r\n        setChargers(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching chargers data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChargerClick = (charger) => {\r\n    setSelectedCharger(charger);\r\n  };\r\n\r\n  const handleInfoWindowClose = () => {\r\n    setSelectedCharger(null);\r\n  };\r\n\r\n  const renderMap = () => (\r\n    <GoogleMap\r\n      mapContainerStyle={mapContainerStyle}\r\n      zoom={10}\r\n      center={center}\r\n    >\r\n      {chargers.map((charger) => (\r\n        <Marker\r\n          key={charger.id}\r\n          position={{ lat: charger.latitude, lng: charger.longitude }}\r\n        />\r\n      ))}\r\n      {selectedCharger && (\r\n        <InfoWindow\r\n          position={{ lat: selectedCharger.latitude, lng: selectedCharger.longitude }}\r\n          onCloseClick={handleInfoWindowClose}\r\n        >\r\n          <div>\r\n            <h4>{selectedCharger.name}</h4> {/* Assuming a 'name' property exists */}\r\n            <p>\r\n              {/* Use Google Places API to fetch address information dynamically */}\r\n              <a\r\n                href={`https://www.google.com/maps/search/?api=1&query=${selectedCharger.latitude},${selectedCharger.longitude}`}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n              >\r\n                Get Directions\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </InfoWindow>\r\n      )\r\n      }\r\n    </GoogleMap>\r\n  );\r\n\r\n  if (loadError) return 'Error loading Google Maps';\r\n  if (!isLoaded) return 'Loading Google Maps';\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of All Chargers</h1>\r\n      <table>\r\n        <thead className=\"table-header\">\r\n          <tr>\r\n            <th>Longitude</th>\r\n            <th>Latitude</th>\r\n            <th>Rate/min</th>\r\n            <th>Compatibility</th>\r\n            <th>Show on Map</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {chargers.map((charger) => (\r\n            <tr key={charger.id} className=\"table-row\">\r\n              <td>{charger.longitude}</td>\r\n              <td>{charger.latitude}</td>\r\n              <td>{charger.rate}</td>\r\n              <td>{charger.compatibility}</td>\r\n              <td>\r\n                <button onClick={() => handleChargerClick(charger)}>\r\n                  Show on Map\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {isLoaded && renderMap()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListChargers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}